# Generated by Django 4.2.7 on 2025-09-07 22:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.CharField(choices=[('juez', 'Juez de Paz'), ('admin', 'Administrador')], default='juez', help_text='Rol que desempeña el usuario en el sistema', max_length=10, verbose_name='Rol del Usuario')),
                ('estado_aprobacion', models.CharField(choices=[('pendiente', 'Pendiente de Aprobación'), ('aprobado', 'Aprobado'), ('rechazado', 'Rechazado')], default='pendiente', help_text='Estado actual de aprobación del usuario', max_length=10, verbose_name='Estado de Aprobación')),
                ('cedula', models.CharField(help_text='Cédula de identidad del usuario', max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='La cédula debe tener exactamente 10 dígitos', regex='^\\d{10}$')], verbose_name='Cédula de Identidad')),
                ('telefono', models.CharField(blank=True, help_text='Número de teléfono de contacto', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Formato de teléfono inválido', regex='^[\\d\\s\\-\\+\\(\\)]+$')], verbose_name='Teléfono')),
                ('direccion', models.TextField(blank=True, help_text='Dirección de residencia del usuario', null=True, verbose_name='Dirección')),
                ('fecha_registro', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha y hora en que se registró el usuario', verbose_name='Fecha de Registro')),
                ('fecha_aprobacion', models.DateTimeField(blank=True, help_text='Fecha y hora en que fue aprobado el usuario', null=True, verbose_name='Fecha de Aprobación')),
                ('observaciones_aprobacion', models.TextField(blank=True, help_text='Observaciones del administrador al aprobar o rechazar', null=True, verbose_name='Observaciones de Aprobación')),
                ('aprobado_por', models.ForeignKey(blank=True, help_text='Usuario administrador que aprobó el registro', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuarios_aprobados', to=settings.AUTH_USER_MODEL, verbose_name='Aprobado por')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['-fecha_registro'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PerfilUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, help_text='Foto de perfil del usuario', null=True, upload_to='avatars/', verbose_name='Avatar')),
                ('biografia', models.TextField(blank=True, help_text='Breve descripción personal del usuario', max_length=500, null=True, verbose_name='Biografía')),
                ('especialidad', models.CharField(blank=True, help_text='Especialidad o área de conocimiento del juez', max_length=100, null=True, verbose_name='Especialidad')),
                ('años_experiencia', models.PositiveIntegerField(default=0, help_text='Años de experiencia como juez de paz', verbose_name='Años de Experiencia')),
                ('recibir_notificaciones_email', models.BooleanField(default=True, help_text='Si desea recibir notificaciones por correo electrónico', verbose_name='Recibir Notificaciones por Email')),
                ('recibir_alertas_casos', models.BooleanField(default=True, help_text='Si desea recibir alertas sobre casos urgentes', verbose_name='Recibir Alertas de Casos')),
                ('tema_preferido', models.CharField(choices=[('claro', 'Tema Claro'), ('oscuro', 'Tema Oscuro'), ('auto', 'Automático')], default='claro', help_text='Tema de interfaz preferido', max_length=20, verbose_name='Tema Preferido')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, help_text='Última vez que se actualizó el perfil', verbose_name='Fecha de Actualización')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Perfil de Usuario',
                'verbose_name_plural': 'Perfiles de Usuario',
            },
        ),
        migrations.CreateModel(
            name='Auditoria',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID de Auditoría')),
                ('accion', models.CharField(choices=[('crear', 'Crear'), ('editar', 'Editar'), ('eliminar', 'Eliminar'), ('aprobar', 'Aprobar'), ('rechazar', 'Rechazar'), ('login', 'Iniciar Sesión'), ('logout', 'Cerrar Sesión'), ('cambiar_password', 'Cambiar Contraseña'), ('subir_archivo', 'Subir Archivo'), ('descargar_archivo', 'Descargar Archivo')], help_text='Tipo de acción que se registró', max_length=20, verbose_name='Acción Realizada')),
                ('modelo_afectado', models.CharField(help_text='Nombre del modelo que fue afectado', max_length=50, verbose_name='Modelo Afectado')),
                ('objeto_id', models.CharField(blank=True, help_text='ID del objeto específico que fue afectado', max_length=50, null=True, verbose_name='ID del Objeto')),
                ('descripcion', models.TextField(help_text='Descripción detallada de la acción realizada', verbose_name='Descripción')),
                ('datos_anteriores', models.JSONField(blank=True, help_text='Estado anterior del objeto (para ediciones)', null=True, verbose_name='Datos Anteriores')),
                ('datos_nuevos', models.JSONField(blank=True, help_text='Estado nuevo del objeto (para ediciones)', null=True, verbose_name='Datos Nuevos')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='Dirección IP desde donde se realizó la acción', null=True, verbose_name='Dirección IP')),
                ('user_agent', models.TextField(blank=True, help_text='Información del navegador utilizado', null=True, verbose_name='User Agent')),
                ('fecha_accion', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha y hora en que se realizó la acción', verbose_name='Fecha de Acción')),
                ('usuario', models.ForeignKey(blank=True, help_text='Usuario que realizó la acción', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Registro de Auditoría',
                'verbose_name_plural': 'Registros de Auditoría',
                'ordering': ['-fecha_accion'],
                'indexes': [models.Index(fields=['usuario', 'fecha_accion'], name='usuarios_au_usuario_e16c77_idx'), models.Index(fields=['modelo_afectado', 'objeto_id'], name='usuarios_au_modelo__1de250_idx'), models.Index(fields=['accion', 'fecha_accion'], name='usuarios_au_accion_43547a_idx')],
            },
        ),
    ]
