# Generated by Django 4.2.7 on 2025-09-07 22:47

import casos.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Adjunto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID del Adjunto')),
                ('nombre_archivo', models.CharField(help_text='Nombre original del archivo', max_length=255, verbose_name='Nombre del Archivo')),
                ('archivo', models.FileField(help_text='Archivo adjunto al caso', upload_to=casos.models.upload_to_adjuntos, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])], verbose_name='Archivo')),
                ('tipo_archivo', models.CharField(choices=[('documento', 'Documento'), ('imagen', 'Imagen'), ('evidencia', 'Evidencia'), ('otro', 'Otro')], default='documento', help_text='Tipo de archivo adjunto', max_length=10, verbose_name='Tipo de Archivo')),
                ('descripcion', models.TextField(blank=True, help_text='Descripción del contenido del archivo', null=True, verbose_name='Descripción')),
                ('tamaño_archivo', models.PositiveIntegerField(help_text='Tamaño del archivo en bytes', verbose_name='Tamaño del Archivo')),
                ('fecha_subida', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha y hora en que se subió el archivo', verbose_name='Fecha de Subida')),
                ('es_publico', models.BooleanField(default=True, help_text='Si el archivo es visible para todas las partes del caso', verbose_name='Es Público')),
            ],
            options={
                'verbose_name': 'Archivo Adjunto',
                'verbose_name_plural': 'Archivos Adjuntos',
                'ordering': ['-fecha_subida'],
            },
        ),
        migrations.CreateModel(
            name='Caso',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID del Caso')),
                ('numero_caso', models.CharField(default=casos.models.generar_numero_caso, help_text='Número único del caso generado automáticamente', max_length=20, unique=True, verbose_name='Número de Caso')),
                ('cedula_solicitante', models.CharField(help_text='Cédula de identidad de quien presenta el caso', max_length=10, validators=[django.core.validators.RegexValidator(message='La cédula debe tener exactamente 10 dígitos', regex='^\\d{10}$')], verbose_name='Cédula del Solicitante')),
                ('nombre_solicitante', models.CharField(help_text='Nombre completo del solicitante', max_length=100, verbose_name='Nombre del Solicitante')),
                ('telefono_solicitante', models.CharField(blank=True, help_text='Número de teléfono del solicitante', max_length=15, null=True, verbose_name='Teléfono del Solicitante')),
                ('direccion_solicitante', models.TextField(help_text='Dirección de residencia del solicitante', verbose_name='Dirección del Solicitante')),
                ('cedula_involucrado', models.CharField(blank=True, help_text='Cédula de identidad de la persona involucrada', max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='La cédula debe tener exactamente 10 dígitos', regex='^\\d{10}$')], verbose_name='Cédula del Involucrado')),
                ('nombre_involucrado', models.CharField(blank=True, help_text='Nombre completo de la persona involucrada', max_length=100, null=True, verbose_name='Nombre del Involucrado')),
                ('telefono_involucrado', models.CharField(blank=True, help_text='Número de teléfono del involucrado', max_length=15, null=True, verbose_name='Teléfono del Involucrado')),
                ('direccion_involucrado', models.TextField(blank=True, help_text='Dirección de residencia del involucrado', null=True, verbose_name='Dirección del Involucrado')),
                ('tipo_conflicto', models.CharField(choices=[('vecinal', 'Vecinal'), ('individual', 'Individual'), ('comunitario', 'Comunitario'), ('contravencion', 'Contravención sin Privación de Libertad'), ('obligacion_patrimonial', 'Obligación Patrimonial (hasta 5 salarios básicos)')], help_text='Tipo de conflicto que se presenta', max_length=30, verbose_name='Tipo de Conflicto')),
                ('descripcion_caso', models.TextField(help_text='Descripción detallada del conflicto presentado', verbose_name='Descripción del Caso')),
                ('bloque_residencial', models.CharField(choices=[('BLOQUE_15', 'Bloque 15'), ('BLOQUE_16', 'Bloque 16'), ('BLOQUE_17', 'Bloque 17'), ('BLOQUE_18', 'Bloque 18'), ('BLOQUE_19', 'Bloque 19'), ('BLOQUE_20', 'Bloque 20'), ('BLOQUE_21', 'Bloque 21'), ('BLOQUE_22P', 'Bloque 22P'), ('BLOQUE_23P', 'Bloque 23P'), ('BLOQUE_24P', 'Bloque 24P'), ('BLOQUE_25', 'Bloque 25')], help_text='Bloque residencial donde ocurre el conflicto', max_length=10, verbose_name='Bloque Residencial')),
                ('estado', models.CharField(choices=[('en_tramite', 'En Trámite'), ('resuelto', 'Resuelto'), ('cerrado', 'Cerrado'), ('archivado', 'Archivado')], default='en_tramite', help_text='Estado actual del caso', max_length=15, verbose_name='Estado del Caso')),
                ('fecha_registro', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha y hora en que se registró el caso', verbose_name='Fecha de Registro')),
                ('fecha_limite', models.DateTimeField(help_text='Fecha límite para resolver el caso (15 días)', verbose_name='Fecha Límite')),
                ('fecha_prorroga', models.DateTimeField(blank=True, help_text='Fecha límite con prórroga (+15 días adicionales)', null=True, verbose_name='Fecha de Prórroga')),
                ('fecha_resolucion', models.DateTimeField(blank=True, help_text='Fecha en que se resolvió el caso', null=True, verbose_name='Fecha de Resolución')),
                ('fecha_cierre', models.DateTimeField(blank=True, help_text='Fecha en que se cerró definitivamente el caso', null=True, verbose_name='Fecha de Cierre')),
                ('medio_resolucion', models.CharField(blank=True, choices=[('conciliacion', 'Conciliación'), ('mediacion', 'Mediación'), ('arbitraje', 'Arbitraje'), ('sentencia', 'Sentencia'), ('desistimiento', 'Desistimiento'), ('otro', 'Otro')], help_text='Medio utilizado para resolver el caso', max_length=20, null=True, verbose_name='Medio de Resolución')),
                ('observaciones_resolucion', models.TextField(blank=True, help_text='Observaciones sobre la resolución del caso', null=True, verbose_name='Observaciones de Resolución')),
                ('prorroga_solicitada', models.BooleanField(default=False, help_text='Indica si se ha solicitado prórroga para este caso', verbose_name='Prórroga Solicitada')),
                ('justificacion_prorroga', models.TextField(blank=True, help_text='Justificación para solicitar la prórroga', null=True, verbose_name='Justificación de Prórroga')),
                ('fecha_solicitud_prorroga', models.DateTimeField(blank=True, help_text='Fecha en que se solicitó la prórroga', null=True, verbose_name='Fecha de Solicitud de Prórroga')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, help_text='Última vez que se actualizó el caso', verbose_name='Fecha de Actualización')),
            ],
            options={
                'verbose_name': 'Caso Comunitario',
                'verbose_name_plural': 'Casos Comunitarios',
                'ordering': ['-fecha_registro'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_sistema', models.CharField(default='Sistema de Gestión de Casos Comunitarios - Jueces de Paz', help_text='Nombre que aparece en el sistema', max_length=100, verbose_name='Nombre del Sistema')),
                ('logo_sistema', models.ImageField(blank=True, help_text='Logo que aparece en el sistema', null=True, upload_to='configuracion/', verbose_name='Logo del Sistema')),
                ('color_primario', models.CharField(default='#007bff', help_text='Color primario del sistema (formato hexadecimal)', max_length=7, verbose_name='Color Primario')),
                ('color_secundario', models.CharField(default='#6c757d', help_text='Color secundario del sistema (formato hexadecimal)', max_length=7, verbose_name='Color Secundario')),
                ('texto_pie_pagina', models.TextField(default='© 2024 Sistema de Gestión de Casos Comunitarios - Jueces de Paz', help_text='Texto que aparece en el pie de página', verbose_name='Texto del Pie de Página')),
                ('plazo_estandar_dias', models.PositiveIntegerField(default=15, help_text='Plazo estándar para resolver casos en días', verbose_name='Plazo Estándar (días)')),
                ('plazo_prorroga_dias', models.PositiveIntegerField(default=15, help_text='Plazo adicional por prórroga en días', verbose_name='Plazo de Prórroga (días)')),
                ('dias_alerta_urgente', models.PositiveIntegerField(default=10, help_text='Días antes del vencimiento para mostrar alerta urgente', verbose_name='Días de Alerta Urgente')),
                ('tamaño_maximo_archivo_mb', models.PositiveIntegerField(default=10, help_text='Tamaño máximo permitido para archivos adjuntos en MB', verbose_name='Tamaño Máximo de Archivo (MB)')),
                ('tipos_archivo_permitidos', models.CharField(default='pdf,doc,docx,jpg,jpeg,png', help_text='Tipos de archivo permitidos separados por comas', max_length=100, verbose_name='Tipos de Archivo Permitidos')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, help_text='Última vez que se actualizó la configuración', verbose_name='Fecha de Actualización')),
            ],
            options={
                'verbose_name': 'Configuración del Sistema',
                'verbose_name_plural': 'Configuraciones del Sistema',
            },
        ),
        migrations.CreateModel(
            name='Observacion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID de la Observación')),
                ('contenido', models.TextField(help_text='Contenido de la observación', verbose_name='Contenido')),
                ('es_interna', models.BooleanField(default=False, help_text='Si la observación es solo para uso interno', verbose_name='Es Interna')),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha y hora en que se creó la observación', verbose_name='Fecha de Creación')),
                ('caso', models.ForeignKey(help_text='Caso al que pertenece la observación', on_delete=django.db.models.deletion.CASCADE, related_name='observaciones', to='casos.caso', verbose_name='Caso')),
            ],
            options={
                'verbose_name': 'Observación',
                'verbose_name_plural': 'Observaciones',
                'ordering': ['-fecha_creacion'],
            },
        ),
    ]
